package dao.bts;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import vo.bts.CountAlarmLog;
import vo.bts.RalarmRogActiveCisco;

public class RalarmRogActiveCiscoDAOImpl extends SqlMapClientDaoSupport implements RalarmRogActiveCiscoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_ACTIVE_CISCO
     *
     * @ibatorgenerated Wed Oct 10 17:04:59 ICT 2018
     */
    public RalarmRogActiveCiscoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_ACTIVE_CISCO
     *
     * @ibatorgenerated Wed Oct 10 17:04:59 ICT 2018
     */
    public void insert(RalarmRogActiveCisco record) {
        getSqlMapClientTemplate().insert("R_ALARM_LOG_ACTIVE_CISCO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table R_ALARM_LOG_ACTIVE_CISCO
     *
     * @ibatorgenerated Wed Oct 10 17:04:59 ICT 2018
     */
    public void insertSelective(RalarmRogActiveCisco record) {
        getSqlMapClientTemplate().insert("R_ALARM_LOG_ACTIVE_CISCO.ibatorgenerated_insertSelective", record);
    }
    @SuppressWarnings("unchecked")
	@Override
	public List<RalarmRogActiveCisco> ralarmList(
			String netWork,
			String severity,
			String region,
			String neType,
			
			String sdateF, 
			String sdateT,
			String edateF, 
			String edateT ,
			
			String province, 
			String district, 
			String bscid, 
			String team,
			
			String alarmType,
			String vendor, 
			String cellid, 
			String duaration
			) {
		// TODO Auto-generated method stub
		Map<String, Object> parms = new HashMap<String, Object>(); 
		
		parms.put("P_SEVERITY", severity);
		parms.put("P_REGION", region);
		
		parms.put("P_SDATE_FROM", sdateF);
   		parms.put("P_SDATE_TO", sdateT);
   		parms.put("P_EDATE_FROM", edateF);
   		parms.put("P_EDATE_TO", edateT);
   		
   		parms.put("P_PROVINCE", province);
   		parms.put("P_DISTRICT", district);
   		parms.put("P_NE", bscid);
   		parms.put("P_TEAM", team);
   		
   		parms.put("P_ALARM_TYPE", alarmType);
   		parms.put("P_VENDOR", vendor);
   		parms.put("P_CELLID", cellid);
   		parms.put("P_DUARATION", duaration);
   		
		
		return getSqlMapClientTemplate().queryForList("R_ALARM_LOG_ACTIVE_CISCO.getRalarmRogActiveCiscoList", parms);
		
	}

    @SuppressWarnings("unchecked")
	@Override
	public List<CountAlarmLog> getCountForSeverity(String sdateF,
			String sdateT, String edateF, String edateT, String bscid,
			String cellid, String vendor, String district, String alarmName,
			String function, String netWork, String username, String province,
			String team, String alarmType, String alarmMappingName,
			String statusView, String duaration,String region,String unAlarmMappingName,String severity, 
			String neType, String center) {
		Map<String, Object> parms = new HashMap<String, Object>();
   		parms.put("P_SDATE_FROM", sdateF);
   		parms.put("P_SDATE_TO", sdateT);
   		parms.put("P_EDATE_FROM", edateF);
   		parms.put("P_EDATE_TO", edateT);
   		parms.put("P_NE", bscid);
   		parms.put("P_CELLID", cellid);
   		parms.put("P_VENDOR", vendor);
   		parms.put("P_DISTRICT", district);
   		parms.put("P_ALARM_NAME", alarmName);
   		parms.put("P_NETWORK", netWork);
   		parms.put("P_TYPE", function);
   		parms.put("P_USERNAME", username);
   		parms.put("P_PROVINCE", province);
   		parms.put("P_TEAM", team);
   		parms.put("P_ALARM_TYPE", alarmType);
   		parms.put("P_ALARM_MAPPING_ID", alarmMappingName);
   		parms.put("P_STATUS_VIEW", statusView);
   		parms.put("P_DUARATION", duaration);
   		parms.put("P_REGION", region);
   		parms.put("P_UN_ALARM_MAPPING", unAlarmMappingName);
   		parms.put("P_SEVERITY", severity);
   		parms.put("P_NE_TYPE", convertArrayToSet(neType));
   		parms.put("P_CENTER", center);
   		parms.put("P_DATA", null);	
   		return getSqlMapClientTemplate().queryForList("R_ALARM_LOG1.getCountForSeverityTruyenDan", parms);
	}
	// TRUNGNQ chuyen string tu dang "BSC,BTS" --> "('BSC', 'BTS')";
	private String convertArrayToSet(String data) {
		if (data == null || data.length() == 0) {
			return "";
		}
		
		String result = "(";
		for (String str : data.split(",")) {
			result += "'" + str + "',";
		}
		
		// xoa dau "," o cuoi
		result = result.substring(0, result.length() - 1);
		
		result += ")";
		
		return result;
	}
	
}