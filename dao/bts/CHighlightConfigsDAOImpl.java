package dao.bts;


import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.bts.CHighlightConfigs;

public class CHighlightConfigsDAOImpl extends SqlMapClientDaoSupport implements CHighlightConfigsDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public CHighlightConfigsDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public int deleteByPrimaryKey(Integer id) {
        CHighlightConfigs key = new CHighlightConfigs();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public void insert(CHighlightConfigs record) {
        getSqlMapClientTemplate().insert("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public void insertSelective(CHighlightConfigs record) {
        getSqlMapClientTemplate().insert("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public CHighlightConfigs selectByPrimaryKey(Integer id) {
        CHighlightConfigs key = new CHighlightConfigs();
        key.setId(id);
        CHighlightConfigs record = (CHighlightConfigs) getSqlMapClientTemplate().queryForObject("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public int updateByPrimaryKeySelective(CHighlightConfigs record) {
        int rows = getSqlMapClientTemplate().update("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table C_HIGHLIGHT_CONFIGS
     *
     * @ibatorgenerated Wed Nov 28 10:03:34 ICT 2012
     */
    public int updateByPrimaryKey(CHighlightConfigs record) {
        int rows = getSqlMapClientTemplate().update("C_HIGHLIGHT_CONFIGS1.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<CHighlightConfigs> getAll() {
		return getSqlMapClientTemplate().queryForList("C_HIGHLIGHT_CONFIGS1.getAll");
	}
    @SuppressWarnings("unchecked")
	@Override
	public List<CHighlightConfigs> getByKey(String key) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_KEY", key);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("C_HIGHLIGHT_CONFIGS1.getByKey", map);
	}
    
    @SuppressWarnings("unchecked")
	@Override
	public List<CHighlightConfigs> fbProcessByStatus() {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("C_HIGHLIGHT_CONFIGS1.fbProcessByStatus", map);
	}

    @SuppressWarnings("unchecked")
	@Override
	public List<CHighlightConfigs> getByKeyAndKPI(String kpi, String key) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_KPI", kpi);
		map.put("P_KEY", key);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("C_HIGHLIGHT_CONFIGS1.getByKeyAndKPI", map);
	}
}