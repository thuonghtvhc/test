package dao.bts;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import vo.bts.SysUserEquipmentName;

public class SysUserEquipmentNameDAOImpl extends SqlMapClientDaoSupport implements SysUserEquipmentNameDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public SysUserEquipmentNameDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        SysUserEquipmentName key = new SysUserEquipmentName();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public void insert(SysUserEquipmentName record) {
        getSqlMapClientTemplate().insert("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public void insertSelective(SysUserEquipmentName record) {
        getSqlMapClientTemplate().insert("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public SysUserEquipmentName selectByPrimaryKey(Integer id) {
        SysUserEquipmentName key = new SysUserEquipmentName();
        key.setId(id);
        SysUserEquipmentName record = (SysUserEquipmentName) getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public int updateByPrimaryKeySelective(SysUserEquipmentName record) {
        int rows = getSqlMapClientTemplate().update("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_USER_EQUIPMENT_NAME
     *
     * @ibatorgenerated Mon Oct 21 09:27:37 PDT 2013
     */
    public int updateByPrimaryKey(SysUserEquipmentName record) {
        int rows = getSqlMapClientTemplate().update("SYS_USER_EQUIPMENT_NAME1.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	@Override
	public List<String> getCellList(String netWork, String bscListStr,
			String district,String username) {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_NETWORK", netWork);
		map.put("P_BSC", bscListStr);
		map.put("P_DISTRICT", district);
		map.put("P_USERNAME", username);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("SYS_USER_EQUIPMENT_NAME1.getCellList", map);
	}
    @SuppressWarnings("unchecked")
	@Override
	public List<String> getBSCList(String network, String username,
			String vendor) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_NETWORK", network);
		map.put("P_USERNAME", username);
		map.put("P_VENDOR", vendor);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("SYS_USER_EQUIPMENT_NAME1.getBSCList", map);
	}
    
    
    @SuppressWarnings("unchecked")
	@Override
	public List<SysUserEquipmentName> getEquipmentByUsername(String username, String neType, String neName, String vendor,String region) {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_USERNAME", username);
		map.put("S_NE_TYPE", neType);
		map.put("S_NE_NAME", neName);
		map.put("S_VENDOR", vendor);
		map.put("P_REGION", region);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("SYS_USER_EQUIPMENT_NAME1.getEquipmentByUsername", map);
	}
    
    @Override
	public int insertUsersEquipmentByUser(String username, String checkedList) {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_USERNAME", username);
		map.put("P_CHECKEDLIST", checkedList);
		getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.insertUsersEquipmentByUser", map);
		return 1;
	}
    
    @Override
	public int deleteSysUsersEquipment(String checkedList) {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_CHECKEDLIST", checkedList);
		getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.deleteSysUsersEquipment", map);
		return 1;
	}
    
    @Override
	public int updateSysUserEquipment(String id, String isEnable, String alarmKpi) {
    	Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_ID", id);
		map.put("P_IS_ENABLE", isEnable);
		map.put("P_ALARM_KPI", alarmKpi);
		getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.updateSysUserEquipment", map);
		return 1;
	}

    @SuppressWarnings("unchecked")
   	@Override
   	public List<String> getSiteList(String netWork, String bscListStr,
   			String district, String username) {
   		Map<String, Object> map = new HashMap<String, Object>();
   		map.put("P_NETWORK", netWork);
   		map.put("P_BSC", bscListStr);
   		map.put("P_DISTRICT", district);
   		map.put("P_USERNAME", username);
   		map.put("P_DATA", null);
   		return getSqlMapClientTemplate().queryForList("SYS_USER_EQUIPMENT_NAME1.getSiteList", map);
   	}
    @SuppressWarnings("unchecked")
	@Override
	public List<SysUserEquipmentName> getEquipmentByGroupCode(String groupCode,
			String neType, String neName, String vendor, String region) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_GROUP_CODE", groupCode);
		map.put("S_NE_TYPE", neType);
		map.put("S_NE_NAME", neName);
		map.put("S_VENDOR", vendor);
		map.put("P_REGION", region);
		map.put("P_DATA", null);
		return getSqlMapClientTemplate().queryForList("SYS_USER_EQUIPMENT_NAME1.getEquipmentByGroupCode", map);
	}

	@Override
	public int insertUsersEquipmentByGroup(String groupCode,
			String addCheckedList) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_GROUP_CODE", groupCode);
		map.put("P_CHECKEDLIST", addCheckedList);
		getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.insertUsersEquipmentByGroup", map);
		return 1;
	}

	@Override
	public int deleteGroupUsersEquipment(String groupCode,
			String removeCheckedList) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("P_GROUP_CODE", groupCode);
		map.put("P_CHECKEDLIST", removeCheckedList);
		getSqlMapClientTemplate().queryForObject("SYS_USER_EQUIPMENT_NAME1.deleteGroupUsersEquipment", map);
		return 1;
	}
	
}